{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","setCurrentPage","paginationPageCount","Math","ceil","allItems","i","push","itemsArr","j","length","slice","itemsList","className","href","onClick","map","el","id","item","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","itemsTo","itemsFrom","defaultValue","onChange","e","target","value","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"4KASaA,EAA6B,SAAC,GAQzC,IAJI,IAFFC,EAEC,EAFDA,MAAOC,EAEN,EAFMA,QAASC,EAEf,EAFeA,YAAaC,EAE5B,EAF4BA,eAGzBC,EAAsBC,KAAKC,KAAKN,GAASC,GACzCM,EAAW,GAERC,EAAI,EAAGA,GAAKR,EAAOQ,GAAK,EAC/BD,EAASE,KAAT,eAAsBD,IAKxB,IAFA,IAAME,EAAW,GAERC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IAAMV,EACzCS,EAASD,KAAKF,EAASM,MAAMF,EAAGA,IAAKV,IAGvC,IAAMa,EAAYJ,EAASR,EAAc,GAczC,OACE,qCACE,qBAAIa,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBb,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRa,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBd,EAAoB,OAAS,QAC5Ce,QArBV,WACsB,IAAhBf,GACFC,EAAeD,EAAc,IAczB,oBAWDQ,EAASQ,KAAI,SAACC,EAAIC,GACjB,OACE,oBAAIL,UAAS,oBAAeb,IAAgBkB,EAAK,EAAI,SAAW,IAAhE,SACE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAK,KACLC,QAAS,WACHf,IAAgBkB,EAAK,GACvBjB,EAAeiB,EAAK,IAN1B,SAUGA,EAAK,KAXiED,EAAG,OAiBlF,oBAAIJ,UAAS,oBAAeb,IAAgBE,EAAsB,WAAa,IAA/E,SACE,mBACE,UAAQ,WACRW,UAAU,YACVC,KAAK,QACL,gBACEd,IAAgBE,EAAsB,OAAS,QAEjDa,QAhDV,WACMf,IAAgBE,GAClBD,EAAeD,EAAc,IAuCzB,uBAaJ,6BACGY,EAAUI,KAAI,SAAAG,GACb,OACE,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtFpC,IAAMC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQhB,KAAKiB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,KAAvC,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO3B,EAAP,KAAoBC,EAApB,KACI4B,EAAU7B,GAAeD,EACvB+B,EAAYD,GAAW9B,EAAU,EAMvC,OAJI8B,EAAUT,EAAMV,SAClBmB,EAAUT,EAAMV,QAIhB,sBAAKG,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWb,EADX,mBACiC8B,EADjC,cACgDD,EADhD,aAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRK,GAAG,kBACHL,UAAU,eACVkB,aAAa,IACbC,SAAU,SAAAC,GACRL,EAAWK,EAAEC,OAAOC,OACpBlC,EAAe,IAPnB,UAUE,wBAAQkC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEf,MAAOsB,EAAMV,OACbX,QAASA,EACTC,YAAaA,EACbC,eAAgBA,QEnDxBoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.c72eb305.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  total: number,\n  perPage: string,\n  currentPage: number,\n  setCurrentPage: (value: number) => void,\n};\n\nexport const Pagination:React.FC<Props> = (\n  {\n    total, perPage, currentPage, setCurrentPage,\n  },\n) => {\n  const paginationPageCount = Math.ceil(total / +perPage);\n  const allItems = [];\n\n  for (let i = 1; i <= total; i += 1) {\n    allItems.push(`Item ${i}`);\n  }\n\n  const itemsArr = [];\n\n  for (let j = 0; j < allItems.length; j += +perPage) {\n    itemsArr.push(allItems.slice(j, j + +perPage));\n  }\n\n  const itemsList = itemsArr[currentPage - 1];\n\n  function prevLinkHandler() {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  }\n\n  function nextLinkHandler() {\n    if (currentPage !== paginationPageCount) {\n      setCurrentPage(currentPage + 1);\n    }\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={prevLinkHandler}\n          >\n            «\n          </a>\n        </li>\n\n        {itemsArr.map((el, id) => {\n          return (\n            <li className={`page-item ${currentPage === id + 1 ? 'active' : ''}`} key={el[0]}>\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href=\"#1\"\n                onClick={() => {\n                  if (currentPage !== id + 1) {\n                    setCurrentPage(id + 1);\n                  }\n                }}\n              >\n                {id + 1}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={`page-item ${currentPage === paginationPageCount ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={\n              currentPage === paginationPageCount ? 'true' : 'false'\n            }\n            onClick={nextLinkHandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsList.map(item => {\n          return (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState('5');\n  const [currentPage, setCurrentPage] = useState(1);\n  let itemsTo = currentPage * +perPage;\n  const itemsFrom = itemsTo - +perPage + 1;\n\n  if (itemsTo > items.length) {\n    itemsTo = items.length;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsFrom} - ${itemsTo} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue=\"5\"\n            onChange={e => {\n              setPerPage(e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}